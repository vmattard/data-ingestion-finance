services:
  # Primary Spark environment for running Spark jobs that interact with Iceberg tables
  spark-iceberg:
    image: tabulario/spark-iceberg:latest
    container_name: spark-iceberg
    build: spark/
    ports:
      - "8888:8888"   # Jupyter Notebook
      - "8080:8080"   # Spark UI
      - "10000:10000" # Spark driver
      - "10001:10001" # Spark History Server
    volumes:
      - ./warehouse:/home/iceberg/warehouse
      - ./notebooks:/home/iceberg/notebooks/notebooks
      - ./data:/home/iceberg/data
      - ./src/jobs:/opt/spark/jobs
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    networks:
      iceberg_spark_network:
    depends_on:
      - rest
      - minio

  # REST catalog acts as a central registry for Iceberg tables
  rest:
    image: tabulario/iceberg-rest:latest
    container_name: iceberg-rest
    ports:
      - "8181:8181"
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - CATALOG_WAREHOUSE=s3://warehouse/
      - CATALOG_IO__IMPL=org.apache.iceberg.aws.s3.S3FileIO
      - CATALOG_S3_ENDPOINT=http://minio:9000
    networks:
      iceberg_spark_network:
        aliases:
          - iceberg-rest.minio

  # Object storage server
  minio:
    image: minio/minio:latest
    container_name: minio-storage
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password
      - MINIO_DOMAIN=minio
    command: [ "server", "/data", "--console-address", ":9001" ]
    networks:
      iceberg_spark_network:
        aliases:
          - warehouse.minio

  # Command-line tool for interacting with MinIO
  mc:
    image: minio/mc:latest
    container_name: minio-client
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add minio http://minio:9000 admin password) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc rm -r --force minio/warehouse;
      /usr/bin/mc mb minio/warehouse;
      /usr/bin/mc policy set public minio/warehouse;
      tail -f /dev/null
      "
    networks:
      iceberg_spark_network:
    depends_on:
      - minio

networks:
  iceberg_spark_network: